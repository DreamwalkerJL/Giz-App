.titleT {
  align-self: stretch;
  position: relative;
  font-weight: 700;
}
.descriptionT {
  align-self: stretch;
  position: relative;
  font-size: 14px;
  font-family: Blinker;
}
.titleAndDescription {
  align-self: stretch;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  padding: 0px 63px 0px 0px;
  font-family: Anybody;
}
.madeByT {
  align-self: stretch;
  position: relative;
  font-size: 14px;
}
.dateIsT {
  position: relative;
}
.dateHowLong {
  position: relative;
  font-weight: 300;
}
.dateFrame {
  width: 281px;
  height: 24px;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  gap: 8px;
  font-size: 20px;
}
.statusInformationFrame {
  align-self: stretch;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  padding: 0px 30px;
  gap: 10px;
}

.userFrame1 {
  height: 90px;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  gap: 2px;
}
.userNameT3 {
  align-self: stretch;
  position: relative;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.statusGizUsers {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding: 13px 0px;
  font-size: 16px;
  color: #000;
}
.gizInfoAndUsers {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  z-index: 0;
}

.giz {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 15px 26px;
  text-align: left;
  font-size: 20px;
  color: #fff;
  font-family: Blinker;
}

.gizFrame {
  width: 100%;
  border-radius: 10px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding: 20px 0px 0px;
  box-sizing: border-box;
  position: relative;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: top;
  max-width: 800px;
  /* ADDED */
  z-index: 1;
  background: linear-gradient(180deg, #463f71 50%, #fb7885 200%);
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
}

/* ADDED */
.gizFrame::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url(/public/statusBG.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: top;
  opacity: 0.075; /* Adjust the opacity as needed */
  z-index: -1; /* Ensure the image is behind the content */
}

.gizFrameBorderBackground {
  width: 100%;
  border-radius: 10px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;

  box-sizing: border-box;
  position: relative;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: top;
  max-width: 800px;
  /* ADDED */
  z-index: -1;
}

.accept {
  width: 96px;
  height: 43px;
  overflow: hidden;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.decline {
  width: 96px;
  height: 43px;
  overflow: hidden;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.regroup {
  width: 118px;
  height: 43px;
  overflow: hidden;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  
}
.gizButtons {
  margin: 0 !important;
  position: absolute;
  top: 0px;
  right: 0px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  z-index: 2;
  text-align: left;
  font-size: 16px;
  color: #fff;
  font-family: Blinker;
}

.declinedText {
  position: absolute;
  top: 35%;
  left: 25%;
  transform: translate(-50%, -50%) rotate(-45deg);
  color: #FF5B5B;
  font-size: 44px;
  font-weight: bold;
  z-index: 10; /* Ensure it's above other elements */
  border: 2px solid #FF5B5B;
  padding-bottom: 10px;
  padding-left: 20px;
  padding-right: 20px
}

.timeStatus {
  font-family: Anybody;
  font-style: italic;
  font-weight: 400;
  font-size: 16px;
}


@media screen and (min-width: 500px) {

  .declinedText {

    left: 30%;
    font-size: 52px;

  }
  
  .acceptedText {

    left: 30%;
    font-size: 62px;
  }

}

@media screen and (min-width: 700px) {

  .declinedText {

    left: 35%;
    font-size: 62px;

  }
  
  .acceptedText {

    left: 30%;
    font-size: 62px;
  }

  .madeByT {
    font-size: 16px;
  }


  .descriptionT {
    font-size: 16px;

  }

  .giz {
    font-size: 24px;
  }

  .timeStatus {
    font-size: 20px;
  }

}

@keyframes rainbowAnimation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.rainbowBorder {
  animation: rainbowAnimation 10s ease infinite;
  background: linear-gradient(
    270deg,
    rgb(253, 120, 120),
    rgb(255, 209, 124),
    rgb(255, 255, 128),
    rgb(122, 253, 122),
    rgb(118, 118, 255),
    rgb(200, 123, 255),
    rgb(255, 130, 255),
    rgb(253, 120, 120)
  );
  background-size: 200% 200%;
  border-radius: 10px; /* Adjust as needed */
  padding: 5px; /* Adjust padding to create the border effect */
}

@keyframes pulsateBorder {
  0% {
    box-shadow: 0 0 0 0 #6b56a3;
  }
  70% {
    box-shadow: 0 0 0 10px rgba(255, 255, 0, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 255, 0, 0);
  }
}

.pulsatingBorder {
  animation: pulsateBorder 6s infinite;
  border: 2px solid #302b4f;
}

.expiredBorder {
  border: 2px solid rgba(255, 0, 0, 0.445);

}

.expiredOpacity {
  opacity: 0.5;
}

.defaultBorder {
  border: 2px solid #302b4f;
}

@keyframes rainbowText {
  0% {
    color: #ff7878;
  }
  12.5% {
    color: #ffce79;
  }
  25% {
    color: #ffff80;
  }
  37.5% {
    color: #7afd7a;
  }
  50% {
    color: #7a7aff;
  }
  62.5% {
    color: #c87bff;
  }
  75% {
    color: #ff82ff;
  }
  87.5% {
    color: #ff7676;
  }
  100% {
    color: #ff7878;
  }
}

.rainbowText {
  animation: rainbowText 30s linear infinite;
}


.expired {
  color: red; /* Or any style you want for expired items */
}
